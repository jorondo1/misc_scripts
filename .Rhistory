library(dplyr, magrittr, phyloseq)
topN <- 20 # <<< how many top taxa
taxRank <- 'Genus' # <<< which taxonomic rank
# Melt the phyloseq object, agglomerate taxonomy and standardize abundances
ps.melt <- moss.ps %>% # <<< !! your phyloseq object
tax_glom(taxRank) %>% # aggregate at desired taxrank
transform_sample_counts(function(x) x/sum(x)) %>%  # normalise counts to 1 by sample
psmelt %>% # melt the object in a single (massive) table
select(!!sym(taxRank), Abundance, # psmelt creates an Abundance variable
Host, Compartment) # <<< !! sample data variables you will need
library(dplyr, magrittr, phyloseq)
p_load(dplyr, magrittr, phyloseq)
# This code uses relative abundances per sample, otherwise the aggregation
# of abundances is biased by the difference in the number of total sequences
# per sample.
library(pacman)
p_load(dplyr, magrittr, phyloseq)
topN <- 20 # <<< how many top taxa
taxRank <- 'Genus' # <<< which taxonomic rank
# Melt the phyloseq object, agglomerate taxonomy and standardize abundances
ps.melt <- moss.ps %>% # <<< !! your phyloseq object
tax_glom(taxRank) %>% # aggregate at desired taxrank
transform_sample_counts(function(x) x/sum(x)) %>%  # normalise counts to 1 by sample
psmelt %>% # melt the object in a single (massive) table
select(!!sym(taxRank), Abundance, # psmelt creates an Abundance variable
Host, Compartment) # <<< !! sample data variables you will need
moss.ps <- readRDS("data/R_out/mossMAGs.RDS")
# Melt the phyloseq object, agglomerate taxonomy and standardize abundances
ps.melt <- moss.ps %>% # <<< !! your phyloseq object
tax_glom(taxRank) %>% # aggregate at desired taxrank
transform_sample_counts(function(x) x/sum(x)) %>%  # normalise counts to 1 by sample
psmelt %>% # melt the object in a single (massive) table
select(!!sym(taxRank), Abundance, # psmelt creates an Abundance variable
Host, Compartment) # <<< !! sample data variables you will need
# Create a taxon -> taxon group conversion table
taxonomie_agregee <- ps.melt %>%
group_by(!!sym(taxRank)) %>% # mean relative abundance by taxRank:
summarise(sum_relab = mean(Abundance)) %>%
arrange(desc(sum_relab)) %>%          # most abundant first
mutate(aggTaxo = as.factor(case_when( # new aggregated taxonomy variable
row_number() < topN ~ !!sym(taxRank),        # N-1 first keep their taxonomy
row_number() >= topN ~ 'Others'))) %>% # 'Others' for every other taxa
select(-sum_relab) # no need for this
# Reorder the vector so that 'Others' is first in plots
taxLvl <- taxonomie_agregee %$% aggTaxo %>%
setdiff(., 'Others') %>% # remove Others
c('Others',.) # put Others first
topN <- 20 # <<< how many top taxa
taxRank <- 'Genus' # <<< which taxonomic rank
# Melt the phyloseq object, agglomerate taxonomy and standardize abundances
ps.melt <- moss.ps %>% # <<< !! your phyloseq object
tax_glom(taxRank) %>% # aggregate at desired taxrank
transform_sample_counts(function(x) x/sum(x)) %>%  # normalise counts to 1 by sample
psmelt %>% # melt the object in a single (massive) table
select(!!sym(taxRank), Abundance, # psmelt creates an Abundance variable
Host, Compartment) # <<< !! sample data variables you will need
# Create a taxon -> taxon group conversion table
taxonomie_agregee <- ps.melt %>%
group_by(!!sym(taxRank)) %>% # mean relative abundance by taxRank:
summarise(sum_relab = mean(Abundance)) %>%
arrange(desc(sum_relab)) %>%          # most abundant first
mutate(aggTaxo = as.factor(case_when( # new aggregated taxonomy variable
row_number() < topN ~ !!sym(taxRank),        # N-1 first keep their taxonomy
row_number() >= topN ~ 'Others'))) %>% # 'Others' for every other taxa
select(-sum_relab) # no need for this
# Melt the phyloseq object, agglomerate taxonomy and standardize abundances
ps.melt <- moss.ps %>% # <<< !! your phyloseq object
tax_glom(taxRank) %>% # aggregate at desired taxrank
transform_sample_counts(function(x) x/sum(x)) %>%  # normalise counts to 1 by sample
psmelt %>% # melt the object in a single (massive) table
select(!!sym(taxRank), Abundance, # psmelt creates an Abundance variable
Host, Compartment) # <<< !! sample data variables you will need
moss.ps <- readRDS("../borealMoss/data/R_out/mossMAGs.RDS")
topN <- 20 # <<< how many top taxa
taxRank <- 'Genus' # <<< which taxonomic rank
# Melt the phyloseq object, agglomerate taxonomy and standardize abundances
ps.melt <- moss.ps %>% # <<< !! your phyloseq object
tax_glom(taxRank) %>% # aggregate at desired taxrank
transform_sample_counts(function(x) x/sum(x)) %>%  # normalise counts to 1 by sample
psmelt %>% # melt the object in a single (massive) table
select(!!sym(taxRank), Abundance, # psmelt creates an Abundance variable
Host, Compartment) # <<< !! sample data variables you will need
# Create a taxon -> taxon group conversion table
taxonomie_agregee <- ps.melt %>%
group_by(!!sym(taxRank)) %>% # mean relative abundance by taxRank:
summarise(sum_relab = mean(Abundance)) %>%
arrange(desc(sum_relab)) %>%          # most abundant first
mutate(aggTaxo = as.factor(case_when( # new aggregated taxonomy variable
row_number() < topN ~ !!sym(taxRank),        # N-1 first keep their taxonomy
row_number() >= topN ~ 'Others'))) %>% # 'Others' for every other taxa
select(-sum_relab) # no need for this
# Reorder the vector so that 'Others' is first in plots
taxLvl <- taxonomie_agregee %$% aggTaxo %>%
setdiff(., 'Others') %>% # remove Others
c('Others',.) # put Others first
# add the aggregated taxonomy variable to the raw data
ps.melt_agg <- left_join(ps.melt, taxonomie_agregee,
by = taxRank) %>%
mutate(aggTaxo = factor(aggTaxo, levels = taxLvl)) # reorder factor levels
# simple stacked barplot :
ps.melt_agg %>%
ggplot(aes(x = Host, y = Abundance, fill = aggTaxo)) +
geom_bar(stat = 'identity',
position = 'fill') #
p_load(dplyr, magrittr, phyloseq, ggplot2)
# add the aggregated taxonomy variable to the raw data
ps.melt_agg <- left_join(ps.melt, taxonomie_agregee,
by = taxRank) %>%
mutate(aggTaxo = factor(aggTaxo, levels = taxLvl)) # reorder factor levels
# simple stacked barplot :
ps.melt_agg %>%
ggplot(aes(x = Host, y = Abundance, fill = aggTaxo)) +
geom_bar(stat = 'identity',
position = 'fill') #
# mean abundance by taxa, by some metadata:
ps.melt_agg %>%
group_by(aggTaxo, Host) %>%
summarise(mean = mean(Abundance),
sd = sd(Abundance))
ps.melt_agg
ps.melt_agg %>% colnames
# mean abundance by taxa, by some metadata:
ps.melt_agg %>%
group_by(aggTaxo, Sample) %>%
summarise(Abundance = sum(Abundance)) %>% ungroup %>%
group_by(aggTaxo, Host) %>%
summarise(mean = mean(Abundance),
sd = sd(Abundance))
# mean abundance by taxa, by some metadata:
ps.melt_agg %>%
group_by(aggTaxo, Sample, Host) %>%
summarise(Abundance = sum(Abundance)) %>% ungroup %>%
group_by(aggTaxo, Host) %>%
summarise(mean = mean(Abundance),
sd = sd(Abundance))
ps.melt_agg
ps.melt_agg %>% colnames
# add the aggregated taxonomy variable to the raw data
ps.melt_agg <- left_join(ps.melt, taxonomie_agregee,
by = taxRank) %>%
mutate(aggTaxo = factor(aggTaxo, levels = taxLvl)) # reorder factor levels
ps.melt_agg
ps.melt_agg %>% View
ps.melt_agg %>% View
ps.melt_agg %>% View=
ps.melt_agg %>% View
taxonomie_agregee
# Melt the phyloseq object, agglomerate taxonomy and standardize abundances
ps.melt <- moss.ps %>% # <<< !! your phyloseq object
tax_glom(taxRank) %>% # aggregate at desired taxrank
transform_sample_counts(function(x) x/sum(x)) %>%  # normalise counts to 1 by sample
psmelt %>% # melt the object in a single (massive) table
select(!!sym(taxRank), Abundance, Sample, # psmelt creates an Abundance variable
Host, Compartment) # <<< !! sample data variables you will need
# Create a taxon -> taxon group conversion table
taxonomie_agregee <- ps.melt %>%
group_by(!!sym(taxRank)) %>% # mean relative abundance by taxRank:
summarise(sum_relab = mean(Abundance)) %>%
arrange(desc(sum_relab)) %>%          # most abundant first
mutate(aggTaxo = as.factor(case_when( # new aggregated taxonomy variable
row_number() < topN ~ !!sym(taxRank),        # N-1 first keep their taxonomy
row_number() >= topN ~ 'Others'))) %>% # 'Others' for every other taxa
select(-sum_relab) # no need for this
taxonomie_agregee
# Reorder the vector so that 'Others' is first in plots
taxLvl <- taxonomie_agregee %$% aggTaxo %>%
setdiff(., 'Others') %>% # remove Others
c('Others',.) # put Others first
# add the aggregated taxonomy variable to the raw data
ps.melt_agg <- left_join(ps.melt, taxonomie_agregee,
by = taxRank) %>%
mutate(aggTaxo = factor(aggTaxo, levels = taxLvl)) # reorder factor levels
# simple stacked barplot :
ps.melt_agg %>%
ggplot(aes(x = Host, y = Abundance, fill = aggTaxo)) +
geom_bar(stat = 'identity',
position = 'fill') #
ps.melt_agg %>%
group_by(aggTaxo, Host, Sample) %>%
summarise(Abundance = sum(Abundance))
ps.melt_agg
ps.melt_agg %>% dim
# mean abundance by taxa, by some metadata:
ps.melt_agg %>%
group_by(aggTaxo, Host, Sample) %>%
summarise(Abundance = sum(Abundance)) %>% ungroup %>%
group_by(aggTaxo, Host) %>%
summarise(mean = mean(Abundance),
sd = sd(Abundance))
# add the aggregated taxonomy variable to the raw data
ps.melt_agg <- left_join(ps.melt, taxonomie_agregee,
by = taxRank) %>%
mutate(aggTaxo = factor(aggTaxo, levels = taxLvl)) %>%
group_by(aggTaxo, Host, Sample) %>%
summarise(Abundance = sum(Abundance)) %>%
ungroup %>%
# reorder factor levels
# simple stacked barplot :
ps.melt_agg %>%
ggplot(aes(x = Host, y = Abundance, fill = aggTaxo)) +
geom_bar(stat = 'identity',
position = 'fill') #
# add the aggregated taxonomy variable to the raw data
ps.melt_agg <- left_join(ps.melt, taxonomie_agregee,
by = taxRank) %>%
mutate(aggTaxo = factor(aggTaxo, levels = taxLvl)) %>%
group_by(aggTaxo, Host, Sample) %>%
summarise(Abundance = sum(Abundance)) %>%
ungroup
# simple stacked barplot :
ps.melt_agg %>%
ggplot(aes(x = Host, y = Abundance, fill = aggTaxo)) +
geom_bar(stat = 'identity',
position = 'fill') #
# add the aggregated taxonomy variable to the raw data
ps.melt_agg <- left_join(ps.melt, taxonomie_agregee,
by = taxRank) %>%
mutate(aggTaxo = factor(aggTaxo, levels = taxLvl)) %>%
group_by(aggTaxo, Host, Sample) %>%
summarise(Abundance = sum(Abundance))
# simple stacked barplot :
ps.melt_agg %>%
ggplot(aes(x = Host, y = Abundance, fill = aggTaxo)) +
geom_bar(stat = 'identity',
position = 'fill') #
# mean abundance by taxa, by some metadata:
ps.melt_agg %>%
group_by(aggTaxo, Host) %>%
summarise(mean = mean(Abundance),
sd = sd(Abundance))
topN <- 10 # <<< how many top taxa
taxRank <- 'Genus' # <<< which taxonomic rank
# Melt the phyloseq object, agglomerate taxonomy and standardize abundances
ps.melt <- moss.ps %>% # <<< !! your phyloseq object
tax_glom(taxRank) %>% # aggregate at desired taxrank
transform_sample_counts(function(x) x/sum(x)) %>%  # normalise counts to 1 by sample
psmelt %>% # melt the object in a single (massive) table
select(!!sym(taxRank), Abundance, Sample, # psmelt creates an Abundance variable
Host, Compartment) # <<< !! sample data variables you will need
# Create a taxon -> taxon group conversion table
taxonomie_agregee <- ps.melt %>%
group_by(!!sym(taxRank)) %>% # mean relative abundance by taxRank:
summarise(sum_relab = mean(Abundance)) %>%
arrange(desc(sum_relab)) %>%          # most abundant first
mutate(aggTaxo = as.factor(case_when( # new aggregated taxonomy variable
row_number() < topN ~ !!sym(taxRank),        # N-1 first keep their taxonomy
row_number() >= topN ~ 'Others'))) %>% # 'Others' for every other taxa
select(-sum_relab) # no need for this
# Reorder the vector so that 'Others' is first in plots
taxLvl <- taxonomie_agregee %$% aggTaxo %>%
setdiff(., 'Others') %>% # remove Others
c('Others',.) # put Others first
# add the aggregated taxonomy variable to the raw data
ps.melt_agg <- left_join(ps.melt, taxonomie_agregee,
by = taxRank) %>%
mutate(aggTaxo = factor(aggTaxo, levels = taxLvl)) %>%   # reorder factor levels
group_by(aggTaxo, Host, Sample) %>% # sum all Others into one by sample
summarise(Abundance = sum(Abundance))
# simple stacked barplot :
ps.melt_agg %>%
ggplot(aes(x = Host, y = Abundance, fill = aggTaxo)) +
geom_bar(stat = 'identity',
position = 'fill') #
taxRank <- 'Family' # <<< which taxonomic rank
# Melt the phyloseq object, agglomerate taxonomy and standardize abundances
ps.melt <- moss.ps %>% # <<< !! your phyloseq object
tax_glom(taxRank) %>% # aggregate at desired taxrank
transform_sample_counts(function(x) x/sum(x)) %>%  # normalise counts to 1 by sample
psmelt %>% # melt the object in a single (massive) table
select(!!sym(taxRank), Abundance, Sample, # psmelt creates an Abundance variable
Host, Compartment) # <<< !! sample data variables you will need
# Create a taxon -> taxon group conversion table
taxonomie_agregee <- ps.melt %>%
group_by(!!sym(taxRank)) %>% # mean relative abundance by taxRank:
summarise(sum_relab = mean(Abundance)) %>%
arrange(desc(sum_relab)) %>%          # most abundant first
mutate(aggTaxo = as.factor(case_when( # new aggregated taxonomy variable
row_number() < topN ~ !!sym(taxRank),        # N-1 first keep their taxonomy
row_number() >= topN ~ 'Others'))) %>% # 'Others' for every other taxa
select(-sum_relab) # no need for this
# Reorder the vector so that 'Others' is first in plots
taxLvl <- taxonomie_agregee %$% aggTaxo %>%
setdiff(., 'Others') %>% # remove Others
c('Others',.) # put Others first
# add the aggregated taxonomy variable to the raw data
ps.melt_agg <- left_join(ps.melt, taxonomie_agregee,
by = taxRank) %>%
mutate(aggTaxo = factor(aggTaxo, levels = taxLvl)) %>%   # reorder factor levels
group_by(aggTaxo, Host, Sample) %>% # sum all Others into one by sample
summarise(Abundance = sum(Abundance))
# simple stacked barplot :
ps.melt_agg %>%
ggplot(aes(x = Host, y = Abundance, fill = aggTaxo)) +
geom_bar(stat = 'identity',
position = 'fill') #
# Import the dataset :
moss.ps <- readRDS(url("https://github.com/jorondo1/borealMoss/raw/main/data/R_out/mossMAGs.RDS"))
topN <- 10 # <<< how many top taxa
taxRank <- 'Family' # <<< which taxonomic rank
# Melt the phyloseq object, agglomerate taxonomy and standardize abundances
ps.melt <- moss.ps %>% # <<< !! your phyloseq object
tax_glom(taxRank) %>% # aggregate at desired taxrank
transform_sample_counts(function(x) x/sum(x)) %>%  # normalise counts to 1 by sample
psmelt %>% # melt the object in a single (massive) table
select(!!sym(taxRank), Abundance, Sample, # psmelt creates an Abundance variable
Host, Compartment) # <<< !! sample data variables you want to use
# Create a taxon -> taxon group conversion table
taxonomie_agregee <- ps.melt %>%
group_by(!!sym(taxRank)) %>% # mean relative abundance by taxRank:
summarise(sum_relab = mean(Abundance)) %>%
arrange(desc(sum_relab)) %>%          # most abundant first
mutate(aggTaxo = as.factor(case_when( # new aggregated taxonomy variable
row_number() < topN ~ !!sym(taxRank),        # N-1 first keep their taxonomy
row_number() >= topN ~ 'Others'))) %>% # 'Others' for every other taxa
select(-sum_relab) # no need for this
# Reorder the vector so that 'Others' is first in plots
taxLvl <- taxonomie_agregee %$% aggTaxo %>%
setdiff(., 'Others') %>% # remove Others
c('Others',.) # put Others first
# add the aggregated taxonomy variable to the raw data
ps.melt_agg <- left_join(ps.melt, taxonomie_agregee,
by = taxRank) %>%
mutate(aggTaxo = factor(aggTaxo, levels = taxLvl)) %>%   # reorder factor levels
group_by(aggTaxo, Host, Sample) %>% # sum all Others into one by sample
summarise(Abundance = sum(Abundance))
# simple stacked barplot :
ps.melt_agg %>%
ggplot(aes(x = Host, y = Abundance, fill = aggTaxo)) +
geom_bar(stat = 'identity',
position = 'fill') #
# mean abundance by taxa, by some metadata:
ps.melt_agg %>%
group_by(aggTaxo, Host) %>%
summarise(mean = mean(Abundance),
sd = sd(Abundance))
